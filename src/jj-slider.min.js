const jjSlider=()=>{var a=Math.round;const b=document.createElement("template");b.innerHTML=`
    <style>
    @import url("https://unpkg.com/element-ui/lib/theme-chalk/slider.css");

    .el-slider {
        font-family: var(--tooltip-font, Helvetica, Arial, sans-serif);
        width: var(--slider-width);
        margin: 0 auto;
    }
    
    .el-slider__runway {
        background-color: var(--runway-color, #E4E7ED);
    }
    
    .el-slider__bar {
        background-color: var(--bar-color, #409EFF);
    }
    
    .el-slider__button {
        border: 2px solid var(--button-border-color, #409EFF);
        background-color: var(--button-color, #FFF);
    }
    
    .el-tooltip__popper.is-dark {
        background: var(--tooltip-color, #303133);
        color: var(--tooltip-text-color, #FFF);
    }
    
    .el-tooltip__popper[x-placement^=top] .popper__arrow,
    .el-tooltip__popper[x-placement^=top] .popper__arrow::after {
        border-top-color: var(--tooltip-color, #303133);
    }
    </style>
    <div role="slider" aria-valuemin="0" aria-valuemax="100" aria-orientation="horizontal" class="el-slider" aria-valuetext="0" aria-label="slider between 0 and 100">
        <div class="el-slider__runway" id="runway">
            <div class="el-slider__bar" style="left: 0%;"></div>
            <div tabindex="0" class="el-slider__button-wrapper" id="btn">
                <div class="el-tooltip el-slider__button" aria-describedby="el-tooltip-9861" tabindex="0"></div>
            </div>
        </div>
        <div role="tooltip" id="el-tooltip-9861" aria-hidden="false" class="el-tooltip__popper is-dark" x-placement="top">
            <span></span>
            <div x-arrow="" class="popper__arrow" style="left: 10.5px;"></div>
        </div>
    </div>
  `;class JJSlider extends HTMLElement{constructor(){super(),this.root=this.attachShadow({mode:"open"}),this.root.appendChild(b.content.cloneNode(!0)),this.sliderContainer=this.root.querySelector(".el-slider"),this.sliderRunway=this.root.querySelector(".el-slider__runway"),this.sliderBar=this.root.querySelector(".el-slider__bar"),this.sliderBtnWrapper=this.root.querySelector(".el-slider__button-wrapper"),this.sliderBtn=this.root.querySelector(".el-tooltip.el-slider__button"),this.tooltip=this.root.querySelector(".el-tooltip__popper"),this.tooltipSpan=this.root.querySelector(".el-tooltip__popper span"),this.getCurrentPosition=this.getCurrentPosition.bind(this),this.setInitPosition=this.setInitPosition.bind(this),this.setPosition=this.setPosition.bind(this),this.onSliderClick=this.onSliderClick.bind(this),this.onButtonHover=this.onButtonHover.bind(this),this.onButtonHoverEnd=this.onButtonHoverEnd.bind(this),this.onButtonDown=this.onButtonDown.bind(this),this.onDragStart=this.onDragStart.bind(this),this.onDragging=this.onDragging.bind(this),this.onDragEnd=this.onDragEnd.bind(this)}connectedCallback(){this.sliderRunway.addEventListener("mousedown",this.onSliderClick),this.sliderBtnWrapper.addEventListener("mouseover",this.onButtonHover),this.sliderBtnWrapper.addEventListener("mouseout",this.onButtonHoverEnd),this.sliderBtnWrapper.addEventListener("mousedown",this.onButtonDown),this._value=this.hasAttribute("value")?this.getAttribute("value"):0,this.min=this.hasAttribute("min")?this.getAttribute("min"):0,this.max=this.hasAttribute("max")?this.getAttribute("max"):100,this.setInitPosition(),this.tooltipSpan.innerHTML=a(this._value),this.tooltip.style="transform-origin: center bottom; z-index: 2282; position: absolute; display: none;"}getCurrentPosition(){return 100*((this._value-this.min)/(this.max-this.min))+"%"}setInitPosition(){const a=100*((this._value-this.min)/(this.max-this.min));this.sliderBar.style.width=a+"%",this.sliderBtnWrapper.style.left=a+"%"}setPosition(b){let c=parseInt(this.min)+b*(this.max-this.min)/100;c>this.max?c=this.max:c<this.min&&(c=this.min),this._value=c,this.setAttribute("value",a(this._value));let d=b;100<d?d=100:0>d&&(d=0),this.sliderBar.style.width=d+"%",this.sliderBtnWrapper.style.left=d+"%",this.tooltipSpan.innerHTML=a(this._value);let e=this.sliderBtnWrapper.getBoundingClientRect();this.tooltip.style="transform-origin: center bottom; z-index: 2282; position: fixed; top: "+(e.top-e.height)+"px; left: "+e.left+"px;"}onSliderClick(a){this.sliderSize=this.sliderContainer.clientWidth;const b=this.sliderContainer.getBoundingClientRect().left;this.setPosition(100*((a.clientX-b)/this.sliderSize)),this.onButtonDown(a)}onButtonHover(a){let b=this.sliderBtnWrapper.getBoundingClientRect();this.tooltip.style="transform-origin: center bottom; z-index: 2282; position: fixed; top: "+(b.top-b.height)+"px; left: "+b.left+"px;"}onButtonHoverEnd(a){this.tooltip.style="transform-origin: center bottom; z-index: 2282; position: fixed; display: none;"}onButtonDown(a){this.disabled||(a.preventDefault(),this.onDragStart(a),window.addEventListener("mousemove",this.onDragging),window.addEventListener("touchmove",this.onDragging),window.addEventListener("mouseup",this.onDragEnd),window.addEventListener("touchend",this.onDragEnd),window.addEventListener("contextmenu",this.onDragEnd))}onDragStart(a){this.dragging=!0,this.isClick=!0,"touchstart"===a.type&&(a.clientX=a.touches[0].clientX),this.startX=a.clientX,this.startPosition=parseFloat(this.getCurrentPosition()),this.newPosition=this.startPosition}onDragging(a){if(this.dragging){this.isClick=!1;let b=0;"touchmove"===a.type&&(a.clientX=a.touches[0].clientX),this.currentX=a.clientX,b=100*((this.currentX-this.startX)/this.sliderSize),this.newPosition=this.startPosition+b,this.setPosition(this.newPosition)}}onDragEnd(){this.dragging&&(setTimeout(()=>{this.dragging=!1,this.isClick||(this.setPosition(this.newPosition),this.tooltip.style="transform-origin: center bottom; z-index: 2282; position: fixed; display: none;")},0),window.removeEventListener("mousemove",this.onDragging),window.removeEventListener("touchmove",this.onDragging),window.removeEventListener("mouseup",this.onDragEnd),window.removeEventListener("touchend",this.onDragEnd),window.removeEventListener("contextmenu",this.onDragEnd))}static get observedAttributes(){return["value","min","max"]}attributeChangedCallback(a,b,c){switch(a){case"value":break;case"min":break;case"max":}}get value(){return this.getAttribute("value")}get min(){return this.getAttribute("min")}get max(){return this.getAttribute("max")}set value(a){this.setAttribute("value",a)}set min(a){this.setAttribute("min",a)}set max(a){this.setAttribute("max",a)}}customElements.define("jj-slider",JJSlider)};jjSlider();