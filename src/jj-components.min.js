class CoreHello extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(document.createElement("slot"))}static get observedAttributes(){return["lang","rainbow"]}connectedCallback(){this.hasAttribute("rainbow")?this.toggleRainbow("true"):this.toggleRainbow("false")}attributeChangedCallback(e,a,b){let c=this.getAttribute(e);c=b,"lang"==e?this.updateText(c,this.innerText):"rainbow"==e&&(this.hasAttribute("rainbow")?this.toggleRainbow("true"):this.toggleRainbow("false"))}disconnectedCallback(){}updateText(e,a){let b=this.innerText.split(" "),c=b[b.length-1];"fr"==e?this.innerText="Salut Monde "+c:"sp"==e?this.innerText="Hola Mundo "+c:"en"==e&&(this.innerText="Hello World "+c)}toggleRainbow(b){"true"==b?this.classList.add("color-text-flow"):"false"==b&&this.classList.remove("color-text-flow")}}customElements.define("core-hello",CoreHello);const jjInputNum=()=>{const d=document.createElement("template");d.innerHTML="<style>\n    button, p {\n        display: inline-block;\n    }\n\n    input[type=\"number\"] {\n    -webkit-appearance: textfield;\n        -moz-appearance: textfield;\n            appearance: textfield;\n    }\n\n    input[type=number]::-webkit-inner-spin-button, \n    input[type=number]::-webkit-outer-spin-button { \n    -webkit-appearance: none;\n    }\n\n    .jj-input-number {\n        border: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        padding: 0px;\n    }\n\n    .border-blue {\n        border-color: var(--border-color,#75baff);\n    }\n\n    .color-blue {\n        color: var(--color,#75baff);\n    }\n\n    .decrement-btn {\n        width: 20%;\n        height: 100%;\n        font-size: 14px;\n        border: none;\n        border-right: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        padding: 0px;\n        background-color: var(--decrement-color);\n    }\n\n    .increment-btn {\n        width: 20%;\n        height: 100%;\n        font-size: 14px;\n        border: none;\n        border-left: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        padding: 0px;\n        background-color: var(--increment-color);\n    }\n\n    .button-container {\n        width:40%;\n        height: 100%;\n        float:right;\n        display: flex;\n        flex-direction: column;\n        padding: 0px;\n    }\n\n    .increment-btn-2{\n        width:100%;\n        height:50%;\n        font-size:14px;\n        border:none;\n        border-left:1px solid var(--border-color,#c2c2c2);\n        border-bottom: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        text-align: center;\n        padding: 0px;\n    }\n\n    .decrement-btn-2{\n        width:100%;\n        height:50%;\n        font-size:14px;\n        border:none;\n        border-left:1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        text-align: center;\n        padding: 0px;\n    }\n    \n    .input-field {\n        width: 60%;\n        height: 100%;\n        font-size: 14px;\n        text-align: center;\n        border: none;\n        padding: 0px;\n        font-family: var(--font, Arial);\n    }\n\n    .disabled {\n        pointer-events:none;\n        opacity: 0.4;\n    }\n\n    .small {\n        width: 200px;\n        height: 40px;\n    }\n\n    .large {\n        width: 250px;\n        height: 55px;\n    }\n  </style>\n  <div class=\"jj-input-number\">\n    <button aria-label=\"decrement\" class=\"decrement-btn\" id=\"decrementBtn\">-</button><!--\n    --><input id=\"jj-inputBoxNum\" type = \"text\" class=\"input-field\"></input><!--\n    --><button aria-label=\"increment\" class=\"increment-btn\" id=\"incrementBtn\">+</button>\n  </div>\n";const a=document.createElement("template");a.innerHTML="<style>\n    button, p {\n        display: inline-block;\n    }\n\n    input[type=\"number\"] {\n    -webkit-appearance: textfield;\n        -moz-appearance: textfield;\n            appearance: textfield;\n    }\n\n    input[type=number]::-webkit-inner-spin-button, \n    input[type=number]::-webkit-outer-spin-button { \n    -webkit-appearance: none;\n    }\n\n    .jj-input-number {\n        border: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        padding: 0px;\n    }\n\n    .border-blue {\n        border-color: var(--border-color,#75baff);\n    }\n\n    .color-blue {\n        color: var(--color,#75baff);\n    }\n\n    .decrement-btn {\n        width: 20%;\n        height: 100%;\n        font-size: 14px;\n        border: none;\n        border-right: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        padding: 0px;\n        background-color: var(--decrement-color);\n    }\n\n    .increment-btn {\n        width: 20%;\n        height: 100%;\n        font-size: 14px;\n        border: none;\n        border-left: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        padding: 0px;\n        background-color: var(--increment-color);\n    }\n\n    .button-container {\n        width:40%;\n        height: 100%;\n        float:right;\n        display: flex;\n        flex-direction: column;\n        padding: 0px;\n    }\n\n    .increment-btn-2{\n        width:100%;\n        height:50%;\n        font-size:14px;\n        border:none;\n        border-left:1px solid var(--border-color,#c2c2c2);\n        border-bottom: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        text-align: center;\n        padding: 0px;\n    }\n\n    .decrement-btn-2{\n        width:100%;\n        height:50%;\n        font-size:14px;\n        border:none;\n        border-left:1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        text-align: center;\n        padding: 0px;\n    }\n    \n    .input-field {\n        width: 60%;\n        height: 100%;\n        font-size: 14px;\n        text-align: center;\n        border: none;\n        padding: 0px;\n        font-family: var(--font, Arial);\n    }\n\n    .disabled {\n        pointer-events:none;\n        opacity: 0.4;\n    }\n\n    .small {\n        width: 200px;\n        height: 40px;\n    }\n\n    .large {\n        width: 250px;\n        height: 55px;\n    }\n  </style>\n  <div class=\"jj-input-number\">\n    <input id=\"jj-inputBoxNum\" type = \"text\" class=\"input-field\"></input>\n    <div class = \"button-container\">\n      <button aria-label=\"increment\" class=\"increment-btn-2\" id=\"incrementBtn\">&#708;</button>\n      <button aria-label=\"decrement\" class=\"decrement-btn-2\" id=\"decrementBtn\">&#709;</button>\n    </div>\n  </div>\n";class JJInputNum extends HTMLElement{set value(b){return this.inputDiv.classList.contains("disabled")?void 0:""===b?(this._value=this.trans(""),void(this.valueElement.value="")):void(this.trans(b)>=this.valueElement.max?(b=this.valueElement.max,this.incrementButton.classList.add("disabled")):this.incrementButton.classList.remove("disabled"),this.trans(b)<=this.valueElement.min?(b=this.valueElement.min,this.decrementButton.classList.add("disabled")):this.decrementButton.classList.remove("disabled"),this._value=this.trans(b),isNaN(this._value)?(this._value=this.trans(""),this.valueElement.value=""):this.valueElement.value=parseFloat(this._value).toFixed(this.precision))}get value(){return this._value}set size(b){this._size=this.trans(b)}get size(){return this._size}set step(b){this._step=this.trans(b)}get step(){return this._step}set position(b){this._position=b}get position(){return this._position}set precision(b){this._precision=b}get precision(){return this._precision}static get observedAttributes(){return["controls","min","max","step","size","disabled","placeholder","value","controls-position","precision"]}connectedCallback(){this.hasAttribute("min")||(this.valueElement.min=Number.NEGATIVE_INFINITY),this.hasAttribute("max")||(this.valueElement.max=Number.POSITIVE_INFINITY),this.hasAttribute("step")||(this.step=1),this.hasAttribute("size")||(this.inputDiv.className+=" small"),this.hasAttribute("value")||(this.value=this.valueElement.min),this.hasAttribute("precision")||(this.precision=0)}attributeChangedCallback(e,a,b){"done"!==this.position&&this.load();let c=0;"undefined"!==this.precision&&(c=this.precision),"min"===e?(this.valueElement.min=this.trans(b),this.value=this.value):"max"===e?(this.valueElement.max=this.trans(b),this.value=this.value):"step"===e?this.step=this.trans(b):"size"===e?(this.inputDiv.classList.remove(a),this.inputDiv.classList.add(b)):"disabled"===e?""==b||"true"==b?this.inputDiv.classList.add("disabled"):this.inputDiv.classList.remove("disabled"):"placeholder"===e?this.valueElement.setAttribute("placeholder",b):"value"===e?this.value=this.trans(b):"controls"===e?"false"===b?(this.incrementButton.style.display="none",this.decrementButton.style.display="none",this.valueElement.style.width="99%"):(this.incrementButton.style.display="inline-block",this.decrementButton.style.display="inline-block",this.valueElement.style.width="59%"):"precision"===e?0<=parseInt(b)&&(this.precision=parseInt(b),this.value=this.trans(this.value)):void 0,this.position="done"}constructor(){super(),this.root=this.attachShadow({mode:"open"})}trans(b){return parseFloat(parseFloat(b).toFixed(this.precision))}load(){var b;"right"===this.getAttribute("controls-position")?(this.root.appendChild(a.content.cloneNode(!0)),this.inputDiv=this.root.querySelector("div"),this.valueElement=this.root.querySelector("input"),this.incrementButton=this.root.querySelectorAll("button")[0],this.decrementButton=this.root.querySelectorAll("button")[1]):(this.root.appendChild(d.content.cloneNode(!0)),this.inputDiv=this.root.querySelector("div"),this.valueElement=this.root.querySelector("input"),this.incrementButton=this.root.querySelectorAll("button")[1],this.decrementButton=this.root.querySelectorAll("button")[0]),this.incrementButton.addEventListener("mousedown",()=>{if(this.valueElement.max>=this.value+this.step){this.value+=this.step,this.setAttribute("value",this.value);let c=this;b=setInterval(function(){c.value+=c.step,c.setAttribute("value",c.value)},400),this.decrementButton.classList.remove("disabled"),this.valueElement.max<=this.value&&this.incrementButton.classList.add("disabled")}}),this.incrementButton.addEventListener("mouseleave",function(){clearInterval(b)}),this.incrementButton.addEventListener("mouseup",function(){clearInterval(b)}),this.decrementButton.addEventListener("mousedown",()=>{if(this.valueElement.min<=this.value-this.step){this.value-=this.step,this.setAttribute("value",this.value);let c=this;b=setInterval(function(){c.value-=c.step,c.setAttribute("value",c.value)},400),this.incrementButton.classList.remove("disabled"),this.valueElement.min>=this.value&&this.decrementButton.classList.add("disabled")}}),this.decrementButton.addEventListener("mouseleave",function(){clearInterval(b)}),this.decrementButton.addEventListener("mouseup",function(){clearInterval(b)}),this.decrementButton.addEventListener("mouseover",()=>{this.inputDiv.classList.add("border-blue"),this.decrementButton.classList.add("color-blue")}),this.decrementButton.addEventListener("mouseout",()=>{this.inputDiv.classList.remove("border-blue"),this.incrementButton.classList.remove("color-blue")}),this.incrementButton.addEventListener("mouseover",()=>{this.inputDiv.classList.add("border-blue"),this.incrementButton.classList.add("color-blue")}),this.incrementButton.addEventListener("mouseout",()=>{this.inputDiv.classList.remove("border-blue"),this.incrementButton.classList.remove("color-blue")}),this.valueElement.addEventListener("keydown",d=>{const a=d.key;let b=this.valueElement.value;if("Backspace"===a||"Delete"===a)if(1==b.length||0==b.length)this.value="";else return void(this.valueElement.value=b.substring(0,b.length));"Enter"===a&&(this.value=d.srcElement.value,this.setAttribute("value",this.value))}),this.valueElement.addEventListener("mouseover",b=>{this.value=b.srcElement.value,this.setAttribute("value",this.value),this.inputDiv.classList.add("border-blue")}),this.valueElement.addEventListener("mouseout",b=>{this.value=b.srcElement.value,this.setAttribute("value",this.value),this.inputDiv.classList.remove("border-blue")})}}customElements.define("jj-input-number",JJInputNum)};jjInputNum();const jjSlider=()=>{var f=Math.round;const a=document.createElement("template");a.innerHTML=`
    <style>
    @import url("https://unpkg.com/element-ui/lib/theme-chalk/slider.css");

    .el-slider {
        font-family: var(--tooltip-font, Helvetica, Arial, sans-serif);
        width: var(--slider-width);
        margin: 0 auto;
    }
    
    .el-slider__runway {
        background-color: var(--runway-color, #E4E7ED);
    }
    
    .el-slider__bar {
        background-color: var(--bar-color, #409EFF);
    }
    
    .el-slider__button {
        border: 2px solid var(--button-border-color, #409EFF);
        background-color: var(--button-color, #FFF);
    }
    
    .el-tooltip__popper.is-dark {
        background: var(--tooltip-color, #303133);
        color: var(--tooltip-text-color, #FFF);
    }
    
    .el-tooltip__popper[x-placement^=top] .popper__arrow,
    .el-tooltip__popper[x-placement^=top] .popper__arrow::after {
        border-top-color: var(--tooltip-color, #303133);
    }
    </style>
    <div role="slider" aria-valuemin="0" aria-valuemax="100" aria-orientation="horizontal" class="el-slider" aria-valuetext="0" aria-label="slider between 0 and 100">
        <div class="el-slider__runway" id="runway">
            <div class="el-slider__bar" style="left: 0%;"></div>
            <div tabindex="0" class="el-slider__button-wrapper" id="btn">
                <div class="el-tooltip el-slider__button" aria-describedby="el-tooltip-9861" tabindex="0"></div>
            </div>
        </div>
        <div role="tooltip" id="el-tooltip-9861" aria-hidden="false" class="el-tooltip__popper is-dark" x-placement="top">
            <span></span>
            <div x-arrow="" class="popper__arrow" style="left: 10.5px;"></div>
        </div>
    </div>
  `;class JJSlider extends HTMLElement{constructor(){super(),this.root=this.attachShadow({mode:"open"}),this.root.appendChild(a.content.cloneNode(!0)),this.sliderContainer=this.root.querySelector(".el-slider"),this.sliderRunway=this.root.querySelector(".el-slider__runway"),this.sliderBar=this.root.querySelector(".el-slider__bar"),this.sliderBtnWrapper=this.root.querySelector(".el-slider__button-wrapper"),this.sliderBtn=this.root.querySelector(".el-tooltip.el-slider__button"),this.tooltip=this.root.querySelector(".el-tooltip__popper"),this.tooltipSpan=this.root.querySelector(".el-tooltip__popper span"),this.getCurrentPosition=this.getCurrentPosition.bind(this),this.setInitPosition=this.setInitPosition.bind(this),this.setPosition=this.setPosition.bind(this),this.onSliderClick=this.onSliderClick.bind(this),this.onButtonHover=this.onButtonHover.bind(this),this.onButtonHoverEnd=this.onButtonHoverEnd.bind(this),this.onButtonDown=this.onButtonDown.bind(this),this.onDragStart=this.onDragStart.bind(this),this.onDragging=this.onDragging.bind(this),this.onDragEnd=this.onDragEnd.bind(this)}connectedCallback(){this.sliderRunway.addEventListener("mousedown",this.onSliderClick),this.sliderBtnWrapper.addEventListener("mouseover",this.onButtonHover),this.sliderBtnWrapper.addEventListener("mouseout",this.onButtonHoverEnd),this.sliderBtnWrapper.addEventListener("mousedown",this.onButtonDown),this._value=this.hasAttribute("value")?this.getAttribute("value"):0,this.min=this.hasAttribute("min")?this.getAttribute("min"):0,this.max=this.hasAttribute("max")?this.getAttribute("max"):100,this.setInitPosition(),this.tooltipSpan.innerHTML=f(this._value),this.tooltip.style="transform-origin: center bottom; z-index: 2282; position: absolute; display: none;"}getCurrentPosition(){return 100*((this._value-this.min)/(this.max-this.min))+"%"}setInitPosition(){const b=100*((this._value-this.min)/(this.max-this.min));this.sliderBar.style.width=b+"%",this.sliderBtnWrapper.style.left=b+"%"}setPosition(a){let b=parseInt(this.min)+a*(this.max-this.min)/100;b>this.max?b=this.max:b<this.min&&(b=this.min),this._value=b,this.setAttribute("value",f(this._value));let g=a;100<g?g=100:0>g&&(g=0),this.sliderBar.style.width=g+"%",this.sliderBtnWrapper.style.left=g+"%",this.tooltipSpan.innerHTML=f(this._value);let h=this.sliderBtnWrapper.getBoundingClientRect();this.tooltip.style="transform-origin: center bottom; z-index: 2282; position: fixed; top: "+(h.top-h.height)+"px; left: "+h.left+"px;"}onSliderClick(c){this.sliderSize=this.sliderContainer.clientWidth;const a=this.sliderContainer.getBoundingClientRect().left;this.setPosition(100*((c.clientX-a)/this.sliderSize)),this.onButtonDown(c)}onButtonHover(c){let a=this.sliderBtnWrapper.getBoundingClientRect();this.tooltip.style="transform-origin: center bottom; z-index: 2282; position: fixed; top: "+(a.top-a.height)+"px; left: "+a.left+"px;"}onButtonHoverEnd(b){this.tooltip.style="transform-origin: center bottom; z-index: 2282; position: fixed; display: none;"}onButtonDown(b){this.disabled||(b.preventDefault(),this.onDragStart(b),window.addEventListener("mousemove",this.onDragging),window.addEventListener("touchmove",this.onDragging),window.addEventListener("mouseup",this.onDragEnd),window.addEventListener("touchend",this.onDragEnd),window.addEventListener("contextmenu",this.onDragEnd))}onDragStart(b){this.dragging=!0,this.isClick=!0,"touchstart"===b.type&&(b.clientX=b.touches[0].clientX),this.startX=b.clientX,this.startPosition=parseFloat(this.getCurrentPosition()),this.newPosition=this.startPosition}onDragging(c){if(this.dragging){this.isClick=!1;let a=0;"touchmove"===c.type&&(c.clientX=c.touches[0].clientX),this.currentX=c.clientX,a=100*((this.currentX-this.startX)/this.sliderSize),this.newPosition=this.startPosition+a,this.setPosition(this.newPosition)}}onDragEnd(){this.dragging&&(setTimeout(()=>{this.dragging=!1,this.isClick||(this.setPosition(this.newPosition),this.tooltip.style="transform-origin: center bottom; z-index: 2282; position: fixed; display: none;")},0),window.removeEventListener("mousemove",this.onDragging),window.removeEventListener("touchmove",this.onDragging),window.removeEventListener("mouseup",this.onDragEnd),window.removeEventListener("touchend",this.onDragEnd),window.removeEventListener("contextmenu",this.onDragEnd))}static get observedAttributes(){return["value","min","max"]}attributeChangedCallback(d,a,b){switch(d){case"value":break;case"min":break;case"max":}}get value(){return this.getAttribute("value")}get min(){return this.getAttribute("min")}get max(){return this.getAttribute("max")}set value(b){this.setAttribute("value",b)}set min(b){this.setAttribute("min",b)}set max(b){this.setAttribute("max",b)}}customElements.define("jj-slider",JJSlider)};jjSlider();const jjSwitch=()=>{const b=document.createElement("template");b.innerHTML=`
  <style>
  @import url("https://unpkg.com/element-ui/lib/theme-chalk/switch.css");

    .switch {
      position: relative;
      display: inline-block;
      width: 40px;
      height: 23px;
    }
    
    /* Hide default HTML checkbox */
    .switch input {
      opacity: 0;
      width: 0;
      height: 0;
    }
    
    /* The slider */
    .slider {
      position: absolute;
      cursor: pointer;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      -webkit-transition: .4s;
      transition: .4s;
    }
    
    .slider:before {
      position: absolute;
      content: "";
      height: 18px;
      width: 18px;
      left: 3px;
      bottom: 3px;
      background-color: var(--slider-button-color, white);
      -webkit-transition: .4s;
      transition: .4s;
    }
    
    input:checked + .slider:before {
      -webkit-transform: translateX(26px);
      -ms-transform: translateX(26px);
      transform: translateX(26px);
    }
    
    /* Rounded sliders */
    .slider.round {
      border-radius: 34px;
    }
    
    .slider.round:before {
      border-radius: 50%;
    }
    
    .disabled {
      opacity: 0.4;
      pointer-events: none;
    }
    
    .text {
      margin: 0 5px;
      font-size: 14px;
      font-weight: 500;
      font-family: var(--text-font,
      Helvetica Neue,Helvetica,PingFang SC,Hiragino Sans GB,
      Microsoft YaHei,SimSun,sans-serif);
      color: var(--inactive-text-color, #303133);
    }
    
    .text-active {
      color: var(--active-text-color, #409eff);
    }

    .slider.small {
      width: 40px;
      height: 18px;
    }

    .slider.small:before {
      width: 13px;
      height: 13px;
    }

    input:checked + .slider.small:before {
      -webkit-transform: translateX(21px);
      -ms-transform: translateX(21px);
      transform: translateX(21px);
    }

    .slider.large {
      width: 70px;
      height: 32px;
    }

    .slider.large:before {
      width: 26px;
      height: 26px;
    }

    input:checked + .slider.large:before {
      -webkit-transform: translateX(38px);
      -ms-transform: translateX(38px);
      transform: translateX(38px);
    }
  </style>
  <div role="switch" id="container" class="el-switch">
    <span id="inactiveText" class='text'></span>
      <label class="switch">
      <input type="checkbox">
      <span id="slider" class="slider round"></span>
      </label>
    <span id="activeText" class='text'></span>
  </div>
  `;class JJSwitch extends HTMLElement{static get observedAttributes(){return["value","disabled","active-value","inactive-value","active-color","inactive-color","active-text","inactive-text","size","round"]}constructor(){super(),this.root=this.attachShadow({mode:"open"}),this.root.appendChild(b.content.cloneNode(!0)),this.label=this.root.querySelector("label"),this.input=this.root.querySelector("input"),this.slider=this.root.querySelector("#slider"),this.sliderBall=this.root.querySelector("#slider",":before"),this.activeText=this.root.querySelector("#activeText"),this.inactiveText=this.root.querySelector("#inactiveText"),this.container=this.root.querySelector("#container"),this.onSwitchClick=this.onSwitchClick.bind(this)}connectedCallback(){if(this.hasAttribute("active-color")?(this.activeColor=this.getAttribute("active-color"),this.input.checked&&(this.slider.style.background=this.activeColor,this.activeText.classList.add("text-active"))):this.activeColor="#409eff",this.hasAttribute("inactive-color")?(this.inactiveColor=this.getAttribute("inactive-color"),!this.input.checked&&(this.slider.style.background=this.inactiveColor,this.inactiveText.classList.add("text-active"))):this.inactiveColor="#dcdfe6",this.hasAttribute("active-text")&&(this.activeText.innerHTML=this.getAttribute("active-text")),this.hasAttribute("inactive-text")&&(this.inactiveText.innerHTML=this.getAttribute("inactive-text")),this.hasAttribute("disabled")&&("true"==this.getAttribute("disabled")?this.container.classList.add("disabled"):this.container.classList.remove("disabled")),this.activeValue=!this.hasAttribute("active-value")||this.getAttribute("active-value"),this.inactiveValue=!!this.hasAttribute("inactive-value")&&this.getAttribute("inactive-value"),this.name=this.hasAttribute("name")?this.getAttribute("name"):"jj-switch",this.hasAttribute("round")&&("false"==this.getAttribute("round")?(console.log(this.getAttribute("round")),this.slider.classList.remove("round")):(console.log("else "+this.getAttribute("round")),this.slider.classList.add("round"))),this.hasAttribute("value")?(this.value=this.getAttribute("value"),"true"==this.getAttribute("value")&&(this.input.checked=!0,this.onSwitchClick())):this.input.checked?this.value=this.activeValue:this.value=this.inactiveValue,this.hasAttribute("size")){var b=this.getAttribute("size");"small"==b?(this.slider.classList.add("small"),this.label.style.width="40px",this.label.style.height="18px"):"large"==b&&(this.slider.classList.add("large"),this.label.style.width="70px",this.label.style.height="32px")}this.input.addEventListener("click",this.onSwitchClick)}attributeChangedCallback(d,a,b){switch(d){case"round":this.slider.classList.contains("round")?this.slider.classList.remove("round"):this.slider.classList.add("round");break;case"disabled":this.container.classList.contains("disabled")?this.container.classList.remove("disabled"):this.container.classList.add("disabled");break;case"inactive-text":this.inactiveText.innerHTML=b;break;case"inactive-color":this.inactiveColor=b,this.input.checked||(this.slider.style.background=b);break;case"inactive-value":this.inactiveValue=b;break;case"active-text":this.activeText.innerHTML=b;break;case"active-color":this.activeColor=b,this.input.checked&&(this.slider.style.background=b);break;case"active-value":this.activeValue=b;break;default:}}onSwitchClick(){this.input.checked?(this.slider.style.background=this.activeColor,this.activeText.classList.add("text-active"),this.inactiveText.classList.remove("text-active"),this.value=this.activeValue,console.log("switch click checked "+this.value)):(this.slider.style.background=this.inactiveColor,this.activeText.classList.remove("text-active"),this.inactiveText.classList.add("text-active"),this.value=this.inactiveValue,console.log("switch click not checked "+this.value))}get value(){return"true"==this.getAttribute("value")}get active_value(){return this.getAttribute("active-value")}get inactive_value(){return this.getAttribute("inactive-value")}get active_text(){return this.getAttribute("active-text")}get inactive_text(){return this.getAttribute("inactive-text")}get active_color(){return this.getAttribute("active-color")}get inactive_color(){return this.getAttribute("inactive-color")}get size(){return this.getAttribute("size")}set value(b){this.setAttribute("value",b)}set active_value(b){this.setAttribute("active-value",b)}set inactive_value(b){this.setAttribute("inactive-value",b)}set active_text(b){this.setAttribute("active-text",b)}set inactive_text(b){this.setAttribute("inactive-text",b)}set active_color(b){this.setAttribute("active-color",b)}set inactive_color(b){this.setAttribute("inactive-color",b)}set size(b){this.setAttribute("size",b)}set name(b){this.setAttribute("name",b)}}customElements.define("jj-switch",JJSwitch)};jjSwitch();