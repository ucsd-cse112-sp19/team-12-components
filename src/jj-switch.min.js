const jjSwitch=()=>{const a=document.createElement("template");a.innerHTML=`
  <style>
  @import url("https://unpkg.com/element-ui/lib/theme-chalk/switch.css");

    .switch {
      position: relative;
      display: inline-block;
      width: 40px;
      height: 23px;
    }
    
    /* Hide default HTML checkbox */
    .switch input {
      opacity: 0;
      width: 0;
      height: 0;
    }
    
    /* The slider */
    .slider {
      position: absolute;
      cursor: pointer;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      -webkit-transition: .4s;
      transition: .4s;
    }
    
    .slider:before {
      position: absolute;
      content: "";
      height: 18px;
      width: 18px;
      left: 3px;
      bottom: 3px;
      background-color: var(--slider-button-color, white);
      -webkit-transition: .4s;
      transition: .4s;
    }
    
    input:checked + .slider:before {
      -webkit-transform: translateX(26px);
      -ms-transform: translateX(26px);
      transform: translateX(26px);
    }
    
    /* Rounded sliders */
    .slider.round {
      border-radius: 34px;
    }
    
    .slider.round:before {
      border-radius: 50%;
    }
    
    .disabled {
      opacity: 0.4;
      pointer-events: none;
    }
    
    .text {
      margin: 0 5px;
      font-size: 14px;
      font-weight: 500;
      font-family: var(--text-font,
      Helvetica Neue,Helvetica,PingFang SC,Hiragino Sans GB,
      Microsoft YaHei,SimSun,sans-serif);
      color: var(--inactive-text-color, #303133);
    }
    
    .text-active {
      color: var(--active-text-color, #409eff);
    }

    .slider.small {
      width: 40px;
      height: 18px;
    }

    .slider.small:before {
      width: 13px;
      height: 13px;
    }

    input:checked + .slider.small:before {
      -webkit-transform: translateX(21px);
      -ms-transform: translateX(21px);
      transform: translateX(21px);
    }

    .slider.large {
      width: 70px;
      height: 32px;
    }

    .slider.large:before {
      width: 26px;
      height: 26px;
    }

    input:checked + .slider.large:before {
      -webkit-transform: translateX(38px);
      -ms-transform: translateX(38px);
      transform: translateX(38px);
    }
  </style>
  <div role="switch" id="container" class="el-switch">
    <span id="inactiveText" class='text'></span>
      <label class="switch">
      <input type="checkbox">
      <span id="slider" class="slider round"></span>
      </label>
    <span id="activeText" class='text'></span>
  </div>
  `;class JJSwitch extends HTMLElement{static get observedAttributes(){return["value","disabled","active-value","inactive-value","active-color","inactive-color","active-text","inactive-text","size","round"]}constructor(){super(),this.root=this.attachShadow({mode:"open"}),this.root.appendChild(a.content.cloneNode(!0)),this.label=this.root.querySelector("label"),this.input=this.root.querySelector("input"),this.slider=this.root.querySelector("#slider"),this.sliderBall=this.root.querySelector("#slider",":before"),this.activeText=this.root.querySelector("#activeText"),this.inactiveText=this.root.querySelector("#inactiveText"),this.container=this.root.querySelector("#container"),this.onSwitchClick=this.onSwitchClick.bind(this)}connectedCallback(){if(this.hasAttribute("active-color")?(this.activeColor=this.getAttribute("active-color"),this.input.checked&&(this.slider.style.background=this.activeColor,this.activeText.classList.add("text-active"))):this.activeColor="#409eff",this.hasAttribute("inactive-color")?(this.inactiveColor=this.getAttribute("inactive-color"),!this.input.checked&&(this.slider.style.background=this.inactiveColor,this.inactiveText.classList.add("text-active"))):this.inactiveColor="#dcdfe6",this.hasAttribute("active-text")&&(this.activeText.innerHTML=this.getAttribute("active-text")),this.hasAttribute("inactive-text")&&(this.inactiveText.innerHTML=this.getAttribute("inactive-text")),this.hasAttribute("disabled")&&("true"==this.getAttribute("disabled")?this.container.classList.add("disabled"):this.container.classList.remove("disabled")),this.activeValue=!this.hasAttribute("active-value")||this.getAttribute("active-value"),this.inactiveValue=!!this.hasAttribute("inactive-value")&&this.getAttribute("inactive-value"),this.name=this.hasAttribute("name")?this.getAttribute("name"):"jj-switch",this.hasAttribute("round")&&("false"==this.getAttribute("round")?(console.log(this.getAttribute("round")),this.slider.classList.remove("round")):(console.log("else "+this.getAttribute("round")),this.slider.classList.add("round"))),this.hasAttribute("value")?(this.value=this.getAttribute("value"),"true"==this.getAttribute("value")&&(this.input.checked=!0,this.onSwitchClick())):this.input.checked?this.value=this.activeValue:this.value=this.inactiveValue,this.hasAttribute("size")){var a=this.getAttribute("size");"small"==a?(this.slider.classList.add("small"),this.label.style.width="40px",this.label.style.height="18px"):"large"==a&&(this.slider.classList.add("large"),this.label.style.width="70px",this.label.style.height="32px")}this.input.addEventListener("click",this.onSwitchClick)}attributeChangedCallback(a,b,c){switch(a){case"round":this.slider.classList.contains("round")?this.slider.classList.remove("round"):this.slider.classList.add("round");break;case"disabled":this.container.classList.contains("disabled")?this.container.classList.remove("disabled"):this.container.classList.add("disabled");break;case"inactive-text":this.inactiveText.innerHTML=c;break;case"inactive-color":this.inactiveColor=c,this.input.checked||(this.slider.style.background=c);break;case"inactive-value":this.inactiveValue=c;break;case"active-text":this.activeText.innerHTML=c;break;case"active-color":this.activeColor=c,this.input.checked&&(this.slider.style.background=c);break;case"active-value":this.activeValue=c;break;default:}}onSwitchClick(){this.input.checked?(this.slider.style.background=this.activeColor,this.activeText.classList.add("text-active"),this.inactiveText.classList.remove("text-active"),this.value=this.activeValue,console.log("switch click checked "+this.value)):(this.slider.style.background=this.inactiveColor,this.activeText.classList.remove("text-active"),this.inactiveText.classList.add("text-active"),this.value=this.inactiveValue,console.log("switch click not checked "+this.value))}get value(){return"true"==this.getAttribute("value")}get active_value(){return this.getAttribute("active-value")}get inactive_value(){return this.getAttribute("inactive-value")}get active_text(){return this.getAttribute("active-text")}get inactive_text(){return this.getAttribute("inactive-text")}get active_color(){return this.getAttribute("active-color")}get inactive_color(){return this.getAttribute("inactive-color")}get size(){return this.getAttribute("size")}set value(a){this.setAttribute("value",a)}set active_value(a){this.setAttribute("active-value",a)}set inactive_value(a){this.setAttribute("inactive-value",a)}set active_text(a){this.setAttribute("active-text",a)}set inactive_text(a){this.setAttribute("inactive-text",a)}set active_color(a){this.setAttribute("active-color",a)}set inactive_color(a){this.setAttribute("inactive-color",a)}set size(a){this.setAttribute("size",a)}set name(a){this.setAttribute("name",a)}}customElements.define("jj-switch",JJSwitch)};jjSwitch();