const jjInputNum=()=>{const a=document.createElement("template");a.innerHTML="<style>\n    button, p {\n        display: inline-block;\n    }\n\n    input[type=\"number\"] {\n    -webkit-appearance: textfield;\n        -moz-appearance: textfield;\n            appearance: textfield;\n    }\n\n    input[type=number]::-webkit-inner-spin-button, \n    input[type=number]::-webkit-outer-spin-button { \n    -webkit-appearance: none;\n    }\n\n    .jj-input-number {\n        border: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        padding: 0px;\n    }\n\n    .border-blue {\n        border-color: var(--border-color,#75baff);\n    }\n\n    .color-blue {\n        color: var(--color,#75baff);\n    }\n\n    .decrement-btn {\n        width: 20%;\n        height: 100%;\n        font-size: 14px;\n        border: none;\n        border-right: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        padding: 0px;\n        background-color: var(--decrement-color);\n    }\n\n    .increment-btn {\n        width: 20%;\n        height: 100%;\n        font-size: 14px;\n        border: none;\n        border-left: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        padding: 0px;\n        background-color: var(--increment-color);\n    }\n\n    .button-container {\n        width:40%;\n        height: 100%;\n        float:right;\n        display: flex;\n        flex-direction: column;\n        padding: 0px;\n    }\n\n    .increment-btn-2{\n        width:100%;\n        height:50%;\n        font-size:14px;\n        border:none;\n        border-left:1px solid var(--border-color,#c2c2c2);\n        border-bottom: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        text-align: center;\n        padding: 0px;\n    }\n\n    .decrement-btn-2{\n        width:100%;\n        height:50%;\n        font-size:14px;\n        border:none;\n        border-left:1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        text-align: center;\n        padding: 0px;\n    }\n    \n    .input-field {\n        width: 60%;\n        height: 100%;\n        font-size: 14px;\n        text-align: center;\n        border: none;\n        padding: 0px;\n        font-family: var(--font, Arial);\n    }\n\n    .disabled {\n        pointer-events:none;\n        opacity: 0.4;\n    }\n\n    .small {\n        width: 200px;\n        height: 40px;\n    }\n\n    .large {\n        width: 250px;\n        height: 55px;\n    }\n  </style>\n  <div class=\"jj-input-number\">\n    <button aria-label=\"decrement\" class=\"decrement-btn\" id=\"decrementBtn\">-</button><!--\n    --><input id=\"jj-inputBoxNum\" type = \"text\" class=\"input-field\"></input><!--\n    --><button aria-label=\"increment\" class=\"increment-btn\" id=\"incrementBtn\">+</button>\n  </div>\n";const b=document.createElement("template");b.innerHTML="<style>\n    button, p {\n        display: inline-block;\n    }\n\n    input[type=\"number\"] {\n    -webkit-appearance: textfield;\n        -moz-appearance: textfield;\n            appearance: textfield;\n    }\n\n    input[type=number]::-webkit-inner-spin-button, \n    input[type=number]::-webkit-outer-spin-button { \n    -webkit-appearance: none;\n    }\n\n    .jj-input-number {\n        border: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        padding: 0px;\n    }\n\n    .border-blue {\n        border-color: var(--border-color,#75baff);\n    }\n\n    .color-blue {\n        color: var(--color,#75baff);\n    }\n\n    .decrement-btn {\n        width: 20%;\n        height: 100%;\n        font-size: 14px;\n        border: none;\n        border-right: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        padding: 0px;\n        background-color: var(--decrement-color);\n    }\n\n    .increment-btn {\n        width: 20%;\n        height: 100%;\n        font-size: 14px;\n        border: none;\n        border-left: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        padding: 0px;\n        background-color: var(--increment-color);\n    }\n\n    .button-container {\n        width:40%;\n        height: 100%;\n        float:right;\n        display: flex;\n        flex-direction: column;\n        padding: 0px;\n    }\n\n    .increment-btn-2{\n        width:100%;\n        height:50%;\n        font-size:14px;\n        border:none;\n        border-left:1px solid var(--border-color,#c2c2c2);\n        border-bottom: 1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        text-align: center;\n        padding: 0px;\n    }\n\n    .decrement-btn-2{\n        width:100%;\n        height:50%;\n        font-size:14px;\n        border:none;\n        border-left:1px solid var(--border-color,#c2c2c2);\n        border-radius: 5px;\n        text-align: center;\n        padding: 0px;\n    }\n    \n    .input-field {\n        width: 60%;\n        height: 100%;\n        font-size: 14px;\n        text-align: center;\n        border: none;\n        padding: 0px;\n        font-family: var(--font, Arial);\n    }\n\n    .disabled {\n        pointer-events:none;\n        opacity: 0.4;\n    }\n\n    .small {\n        width: 200px;\n        height: 40px;\n    }\n\n    .large {\n        width: 250px;\n        height: 55px;\n    }\n  </style>\n  <div class=\"jj-input-number\">\n    <input id=\"jj-inputBoxNum\" type = \"text\" class=\"input-field\"></input>\n    <div class = \"button-container\">\n      <button aria-label=\"increment\" class=\"increment-btn-2\" id=\"incrementBtn\">&#708;</button>\n      <button aria-label=\"decrement\" class=\"decrement-btn-2\" id=\"decrementBtn\">&#709;</button>\n    </div>\n  </div>\n";class JJInputNum extends HTMLElement{set value(a){return this.inputDiv.classList.contains("disabled")?void 0:""===a?(this._value=this.trans(""),void(this.valueElement.value="")):void(this.trans(a)>=this.valueElement.max?(a=this.valueElement.max,this.incrementButton.classList.add("disabled")):this.incrementButton.classList.remove("disabled"),this.trans(a)<=this.valueElement.min?(a=this.valueElement.min,this.decrementButton.classList.add("disabled")):this.decrementButton.classList.remove("disabled"),this._value=this.trans(a),isNaN(this._value)?(this._value=this.trans(""),this.valueElement.value=""):this.valueElement.value=parseFloat(this._value).toFixed(this.precision))}get value(){return this._value}set size(a){this._size=this.trans(a)}get size(){return this._size}set step(a){this._step=this.trans(a)}get step(){return this._step}set position(a){this._position=a}get position(){return this._position}set precision(a){this._precision=a}get precision(){return this._precision}static get observedAttributes(){return["controls","min","max","step","size","disabled","placeholder","value","controls-position","precision"]}connectedCallback(){this.hasAttribute("min")||(this.valueElement.min=Number.NEGATIVE_INFINITY),this.hasAttribute("max")||(this.valueElement.max=Number.POSITIVE_INFINITY),this.hasAttribute("step")||(this.step=1),this.hasAttribute("size")||(this.inputDiv.className+=" small"),this.hasAttribute("value")||(this.value=this.valueElement.min),this.hasAttribute("precision")||(this.precision=0)}attributeChangedCallback(a,b,c){"done"!==this.position&&this.load();let d=0;"undefined"!==this.precision&&(d=this.precision);"min"===a?(this.valueElement.min=this.trans(c),this.value=this.value):"max"===a?(this.valueElement.max=this.trans(c),this.value=this.value):"step"===a?this.step=this.trans(c):"size"===a?(this.inputDiv.classList.remove(b),this.inputDiv.classList.add(c)):"disabled"===a?""==c||"true"==c?this.inputDiv.classList.add("disabled"):this.inputDiv.classList.remove("disabled"):"placeholder"===a?this.valueElement.setAttribute("placeholder",c):"value"===a?this.value=this.trans(c):"controls"===a?"false"===c?(this.incrementButton.style.display="none",this.decrementButton.style.display="none",this.valueElement.style.width="99%"):(this.incrementButton.style.display="inline-block",this.decrementButton.style.display="inline-block",this.valueElement.style.width="59%"):"precision"===a?0<=parseInt(c)&&(this.precision=parseInt(c),this.value=this.trans(this.value)):void 0;this.position="done"}constructor(){super(),this.root=this.attachShadow({mode:"open"})}trans(a){return parseFloat(parseFloat(a).toFixed(this.precision))}load(){var c;"right"===this.getAttribute("controls-position")?(this.root.appendChild(b.content.cloneNode(!0)),this.inputDiv=this.root.querySelector("div"),this.valueElement=this.root.querySelector("input"),this.incrementButton=this.root.querySelectorAll("button")[0],this.decrementButton=this.root.querySelectorAll("button")[1]):(this.root.appendChild(a.content.cloneNode(!0)),this.inputDiv=this.root.querySelector("div"),this.valueElement=this.root.querySelector("input"),this.incrementButton=this.root.querySelectorAll("button")[1],this.decrementButton=this.root.querySelectorAll("button")[0]),this.incrementButton.addEventListener("mousedown",()=>{if(this.valueElement.max>=this.value+this.step){this.value+=this.step,this.setAttribute("value",this.value);let a=this;c=setInterval(function(){a.value+=a.step,a.setAttribute("value",a.value)},400),this.decrementButton.classList.remove("disabled"),this.valueElement.max<=this.value&&this.incrementButton.classList.add("disabled")}}),this.incrementButton.addEventListener("mouseleave",function(){clearInterval(c)}),this.incrementButton.addEventListener("mouseup",function(){clearInterval(c)}),this.decrementButton.addEventListener("mousedown",()=>{if(this.valueElement.min<=this.value-this.step){this.value-=this.step,this.setAttribute("value",this.value);let a=this;c=setInterval(function(){a.value-=a.step,a.setAttribute("value",a.value)},400),this.incrementButton.classList.remove("disabled"),this.valueElement.min>=this.value&&this.decrementButton.classList.add("disabled")}}),this.decrementButton.addEventListener("mouseleave",function(){clearInterval(c)}),this.decrementButton.addEventListener("mouseup",function(){clearInterval(c)}),this.decrementButton.addEventListener("mouseover",()=>{this.inputDiv.classList.add("border-blue"),this.decrementButton.classList.add("color-blue")}),this.decrementButton.addEventListener("mouseout",()=>{this.inputDiv.classList.remove("border-blue"),this.incrementButton.classList.remove("color-blue")}),this.incrementButton.addEventListener("mouseover",()=>{this.inputDiv.classList.add("border-blue"),this.incrementButton.classList.add("color-blue")}),this.incrementButton.addEventListener("mouseout",()=>{this.inputDiv.classList.remove("border-blue"),this.incrementButton.classList.remove("color-blue")}),this.valueElement.addEventListener("keydown",a=>{const b=a.key;let c=this.valueElement.value;if("Backspace"===b||"Delete"===b)if(1==c.length||0==c.length)this.value="";else return void(this.valueElement.value=c.substring(0,c.length));"Enter"===b&&(this.value=a.srcElement.value,this.setAttribute("value",this.value))}),this.valueElement.addEventListener("mouseover",a=>{this.value=a.srcElement.value,this.setAttribute("value",this.value),this.inputDiv.classList.add("border-blue")}),this.valueElement.addEventListener("mouseout",a=>{this.value=a.srcElement.value,this.setAttribute("value",this.value),this.inputDiv.classList.remove("border-blue")})}}customElements.define("jj-input-number",JJInputNum)};jjInputNum();