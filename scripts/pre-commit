#!/bin/sh
# Hook script that runs when the user tries to use "git commit"
#
# For class demonstration: 
# Set hook_enabled equal to true to print that code formatting changed some
# files
#
# Set hook_enabled equal to false if you want code formatting to reccomend no
# changes.
#
# These messages will only show when trying to commit
#
# NOTE: If hook_enabled is true then the code formatting will reccomend changes
# and tou wont be able to commit!
# Change to false if you want to actually commit! Until this hook is fully
# developed.
if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# If this bool is true the below test will be run on the changes we are trying
# to commit 
hook_enabled=false

# Redirect output to stderr.
exec 1>&2

# If the hook is enabled and there are one or more files added to the commit run
# code formatting.
# TODO: Modify git diff to run code formatting on changed files
if [ "$hook_enabled" != "false" ] &&
	test $(git diff --cached --name-only $against | wc -c) != 0
then
	cat <<\EOF
  Code formatting changed some files, please review and re-add files with git add
EOF
	exit 1
fi

# For the demonstration if hook_enabled is false reccomend no changes to the
# code. (And actually commit, not exit 1) 
cat <<\EOF
  Code foramatting had no reccomended changes!
EOF
 exit 0
